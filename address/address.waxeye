# Stable Waxeye seems to have a bug around `?(*X ...)`,
# so I replaced it with  `?(?X *X ...)`.
# Don't forget to follow nonterminals when you are checking against this.

Addr <-
  ?FakePostcode ?(?(RepeatedPostcode +Seps) *(RepeatedPostcode +Seps) LastPostcode *Seps)
  TownStreet ?(+Sep Type) *Seps
  ?(Number ?(?Sep *Sep Locator))

FakePostcode <: '9999' +Seps

RepeatedPostcode <: Postcode &(+Seps Postcode)

LastPostcode <= Postcode

Postcode <= [1-8][0-9][0-9][0-9] | '9'[0-8][0-9][0-9] | '99'[0-8][0-9] | '999'[0-8]

TownStreet <= UTownStreet | CTownStreet

# Uppercase town and street
UTownStreet <= UTown +Seps UStreet
UTown <- Big +Big
UStreet <- BigNum *BigNum *( NotType +BigNum) ?'.'

# Camelcase or lowercase town and street
CTownStreet <= CTown *Seps CStreet
CTown <- Big +Small
CStreet <- BigNum *BigSmallNum *( NotType +BigSmallNum) ?'.'

NotType <= +Sepn !(Type (Seps | Num | !.))

Type <- "út" | "utca" | "főút"

Number <=
  Km
  | Conscription
  | House ?(+Seps Conscription)
  | :('(') Conscription :(')') *Seps House

Km <- [1-9] *Num :('.' *Sep "km")

House <= HouseNumber ?(?Sepd *Sepd Level) ?(?Sepd *Sepd Door) :(?'.')

HouseNumber <-
  [1-9] ?Num ?Num
  ?(?Sep *Sep '-' *Sep [1-9] ?Num ?Num)
  ?(?Sep *Sep '/' *Sep ([A-Za-z] | [1-9] | [1-9]Num))
  :(?(+Sepd "szám"))

Level <= Ground | LevelN :(? '.' *Sep "em" ?"elet" ?'.')
Ground <- ("fsz" ? "t" | "földszint") ?'.'
LevelN <- +Num

Door <= DoorN :(?'.' *Sep "ajtó")
DoorN <- +Num

Conscription <= ConscriptionHrsz | ConscriptionNum

ConscriptionNum <=
  ( Num Num Num +Num '/' +Num
  | +Num '/' Num Num +Num
  | '0' *Num '/' +Num
  | +Num '/0' *Num
  ) :(?(?Sep *Sep '.') ?(?Sep *Sep "hrsz" ?'.'))

ConscriptionHrsz <=
  +Num ?('/' +Num *('/' +BigSmallNum))
  :(?(?Sep *Sep '.') *Sep "hrsz" ?'.')

Locator <- +BigSmallNum ?(+[ \t.] "számú") +[ \t.] ("üzlet" | "pavilon")

Sep <: [ \t]
Sepd <: Sep | '.'
Seps <: Sepn | ','
Sepn <= [ \t.-]
Small <= [a-záíűőüöúóé]
Big <= [A-ZÁÍŰŐÜÖÚÓÉ]
BigSmall <= Big | Small
BigSmallNum <= BigSmall | Num
BigNum <= Big | Num
Num <= [0-9]
